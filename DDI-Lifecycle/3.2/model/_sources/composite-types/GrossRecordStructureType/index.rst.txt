GrossRecordStructureType
------------------------

The gross or macro level structures of the record structure including the link to the LogicalRecord and information on the number and ordering of each Physical Segment of the LogicalRecord as stored in the data file. Provides an attribute stating the number of physical segments with a default value of "1".

Properties
~~~~~~~~~~

.. csv-table::
   :header: "Name","Type","","Description"
   :widths: 15,10,5,100

   "LogicalRecordReference",":doc:`/composite-types/LogicalRecordType/index`","0..1","Reference to the LogicalRecord that describes the record type and intellectual content of the record within the physical data file."
   "PhysicalRecordSegment",":doc:`/composite-types/PhysicalRecordSegmentType/index`","0..n","A description of each physical storage segment required to completely cover the logical record. A logical record may be stored in one or more segments housed hierarchically in a single file or in separate data files. All logical records have at least one segment."
   "NumberOfPhysicalSegments","int","0..1","Number of physical records segments each logical record (case) is divided into. Express as an integer. Caution in using checksums is recommended. Conflict between checksums and the items being counted can cause problems with warning flags during processing. If using checksum to capture information for internal processing purposes, the use of automatically generated check sums is strongly urged."

Properties Inherited from IdentifiableType
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. csv-table::
   :header: "Name","Type","","Description"
   :widths: 15,10,5,100

   "URN","string","1..1",""
   "Agency","string","1..1",""
   "ID","string","1..1",""
   "Version","string","1..1",""
   "UserID",":doc:`/composite-types/UserIDType/index`","0..n","Allows for the specification of identifiers other than the specified DDI identification of the object. This may be a legacy ID from DDI-C, a system specific ID such as for a database or registry, or a non-DDI unique identifier. As the identifier is specific to a system the system must be identified with the UserID structure."
   "InheritanceAction","string","0..1","The attribute ""action"" is used for inheritance situations where there is an override at the local level (within a grouped StudyUnit) which is not available for further inheritance. There are three possible values for ""action"": Add - A new identifiable object (an Identifiable, Versionable, or Maintainable element) is provided locally with a new identifier (one that is not inherited). All properties (elements and attributes contained in the object) of the object are as specified. If an object with an existing id is created, this is an error.; Update - An object is provided locally with the SAME id as the inherited object. For each type of property that is specified locally, a full set of those properties is specified for local use. These properties replace any properties of this type which were inherited. Unspecified properties are used as inherited.; Delete - An object is provided locally with the SAME id as the inherited object. All properties specified locally in this object will be deleted if their types and values match those inherited. Note that to completely delete an object at the local level, all properties of the inherited object must be listed."


Item Type Hierarchy
~~~~~~~~~~~~~~~~~~~

* :doc:`/composite-types/IdentifiableType/index`
    * **GrossRecordStructureType**


Relationships
~~~~~~~~~~~~~
The following types reference this type.

* :doc:`/item-types/PhysicalStructure/index`

.. container:: image

   |stub|

.. |stub| image:: ../../images/GrossRecordStructureType.svg

