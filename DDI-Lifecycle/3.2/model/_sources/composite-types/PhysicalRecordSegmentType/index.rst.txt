PhysicalRecordSegmentType
-------------------------

A description of the physical record segment as found in the data store. A logical record may be stored in one or more segments housed hierarchically in a single file or in separate data files. All logical records have at least one segment. Identifies the Key variable identifying the segment if the identifier exists in the record, a file name identifier if the segment identification is expressed as part of the file name (used when each segment is stored in a separate file), the order of this segment in relation to other physical segments as part of the logical record, and a flag indicating whether or not the physical segment contains a key.

Properties
~~~~~~~~~~

.. csv-table::
   :header: "Name","Type","","Description"
   :widths: 15,10,5,100

   "KeyVariableReference",":doc:`/item-types/Variable/index`","0..1","Reference to the Unique key variable for segment identification."
   "FileNameIdentification","string","0..1","If the file containing this segment has a standard section of its file name, include it here. For example a segment number. For example, in the files 2000SF10001.csv and 2000SF10002.csv the last 4 digits contain the segment number. There is no standard means of specifying this information in a machine-actionable way. This statement is informational but in some legacy files may be the only location where the segment identification is found."
   "SegmentOrder","int","0..1","Indicates the position of this physical record segment within the logical record expressed as an integer."
   "HasSegmentKey","boolean","0..1","Set to ""true"" if there is a variable identifying the segment order. If true a segment key should be declared in a KeyVariableReference. Set to ""false"" if there are multiple segments and the identification of a particular segment is based on the order of the records within the file."

Properties Inherited from IdentifiableType
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. csv-table::
   :header: "Name","Type","","Description"
   :widths: 15,10,5,100

   "URN","string","1..1",""
   "Agency","string","1..1",""
   "ID","string","1..1",""
   "Version","string","1..1",""
   "UserID",":doc:`/composite-types/UserIDType/index`","0..n","Allows for the specification of identifiers other than the specified DDI identification of the object. This may be a legacy ID from DDI-C, a system specific ID such as for a database or registry, or a non-DDI unique identifier. As the identifier is specific to a system the system must be identified with the UserID structure."
   "InheritanceAction","string","0..1","The attribute ""action"" is used for inheritance situations where there is an override at the local level (within a grouped StudyUnit) which is not available for further inheritance. There are three possible values for ""action"": Add - A new identifiable object (an Identifiable, Versionable, or Maintainable element) is provided locally with a new identifier (one that is not inherited). All properties (elements and attributes contained in the object) of the object are as specified. If an object with an existing id is created, this is an error.; Update - An object is provided locally with the SAME id as the inherited object. For each type of property that is specified locally, a full set of those properties is specified for local use. These properties replace any properties of this type which were inherited. Unspecified properties are used as inherited.; Delete - An object is provided locally with the SAME id as the inherited object. All properties specified locally in this object will be deleted if their types and values match those inherited. Note that to completely delete an object at the local level, all properties of the inherited object must be listed."


Item Type Hierarchy
~~~~~~~~~~~~~~~~~~~

* :doc:`/composite-types/IdentifiableType/index`
    * **PhysicalRecordSegmentType**


Relationships
~~~~~~~~~~~~~
The following types reference this type.

* :doc:`/composite-types/GrossRecordStructureType/index`

.. container:: image

   |stub|

.. |stub| image:: ../../images/PhysicalRecordSegmentType.svg

